/*
	Author: 
		Patrick Mckown

	Date:
		2024-08-17

	Purpose:
		To create a comprehensive vendor master list that includes vendor details, addresses, and geographical data.

	Database:
		AdventureWorks2014

	Dependencies:
		None

	Notes: 
		This query utilizes Common Table Expressions (CTEs) to simplify the retrieval of data from multiple related tables and to structure the final result set for ease of analysis.

	Returns:
		A single table containing:

	+---------------------+---------------------------------------------+-------------------+
	| Field               | Description                                 | Data Type         |
	+---------------------+---------------------------------------------+-------------------+
	| dv.BusinessEntityID | Unique identifier for the vendor            | int               |
	| dv.AccountNumber    | Account number associated with the vendor   | nvarchar(15)      |
	| VendorName          | Name of the vendor                          | nvarchar(50)      |
	| AddressType         | Type of the address (e.g., Main Office)     | nvarchar(50)      |
	| AddressLine1        | First line of the vendor's address          | nvarchar(60)      |
	| AddressLine2        | Second line of the vendor's address         | nvarchar(60)      |
	| City                | City where the vendor is located            | nvarchar(30)      |
	| PostalCode          | Postal code of the vendor's address         | nvarchar(15)      |
	| StateProvince       | Name of the state or province               | nvarchar(50)      |
	| Territory           | Name of the sales territory                 | nvarchar(50)      |
	| Country             | Name of the country                         | nvarchar(50)      |
	+---------------------+---------------------------------------------+-------------------+


	Usage:
		This query is designed to extract a detailed vendor master list, which can be used for reporting, auditing, and integrating with other vendor management systems.
		The data can be exported to Excel or other tools for further analysis or integration.

	Assumptions:
		The database schema follows the AdventureWorks2014 standard.
		Vendors are uniquely identified by their BusinessEntityID, and each vendor can have multiple addresses.

	Modifications and Maintenance:
		None.

	Challenges and Solutions:
		None.

	Revision History:
		2024-08-17: Initial creation by Patrick Mckown.
*/

WITH DimVendors AS (
	SELECT
		BusinessEntityID
		, AccountNumber
		, [Name] --VendorName
		, CreditRating
		, PreferredVendorStatus
		, ActiveFlag
	FROM
		Purchasing.Vendor
)
, DimVendorAddressID AS (
	SELECT
		BusinessEntityID
		, AddressID
		, AddressTypeID
	FROM
		Person.BusinessEntityAddress
)
, DimVendorAddress AS (
	SELECT
		AddressID
		, AddressLine1
		, AddressLine2
		, City
		, StateProvinceID
		, PostalCode
		, SpatialLocation
	FROM
		Person.[Address]
)
, DimAddressType AS (
	SELECT
		AddressTypeID
		, [Name] --AddressType
	FROM
		Person.AddressType
)
, DimStateProvince AS (
	SELECT 
		StateProvinceID
		, [Name] --ProvinceStateName
		, TerritoryID
	FROM
		Person.StateProvince
)
, DimTerritory AS (
	SELECT
		TerritoryID
		, [Name] --TerritoryName
		, CountryRegionCode
	FROM
		Sales.SalesTerritory
)
, DimCountry AS (
	SELECT
		CountryRegionCode
		, [Name] --Country
	FROM
		Person.CountryRegion
)
, VendorMasterQuery AS (
	SELECT
		dv.BusinessEntityID
		, dv.AccountNumber
		, dv.[Name] AS VendorName
		, dat.[Name] AS AddressType
		, dva.AddressLine1
		, dva.AddressLine2
		, dva.City
		, dva.PostalCode
		, dsp.[Name] AS StateProvince
		, dt.[Name] AS Territory
		, dc.[Name] AS Country
	FROM
		DimVendors AS dv
	LEFT JOIN
		DimVendorAddressID AS dvaid ON dv.BusinessEntityID = dvaid.BusinessEntityID
	LEFT JOIN
		DimVendorAddress AS dva ON dva.AddressID = dvaid.AddressID
	LEFT JOIN
		DimAddressType AS dat ON dvaid.AddressTypeID = dat.AddressTypeID
	LEFT JOIN
		DimStateProvince AS dsp ON dva.StateProvinceID = dsp.StateProvinceID
	LEFT JOIN
		DimTerritory AS dt ON dsp.TerritoryID = dt.TerritoryID
	LEFT JOIN
		DimCountry AS dc ON dt.CountryRegionCode = dc.CountryRegionCode
)

SELECT
	*
FROM
	VendorMasterQuery
